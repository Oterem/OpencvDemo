

        Mat src =new Mat();
        Mat dest = new Mat();
        
        try{
            src = Utils.loadResource(MainActivity.this,R.drawable.mel2,Imgcodecs.CV_LOAD_IMAGE_GRAYSCALE);
        }
        catch (Exception e){}


        if(!src.empty())
        {
            Mat res = new Mat();
            ImageView image =(ImageView)findViewById(R.id.pic1);






            /*Convert the image to black and white based on a threshold*/
            Imgproc.threshold(src, dest, 100, 255,  Imgproc.THRESH_BINARY_INV);
            /*Filtring some "noise" from the picture*/
            Imgproc.dilate(dest,dest,Imgproc.getStructuringElement(Imgproc.MORPH_RECT, new Size(2,2)));
            /*This vector will store all the  contours*/
            List<MatOfPoint> contours= new ArrayList<MatOfPoint>();
            Mat hierarchy = new Mat();//for findContours calculation. Do not touch.
            Imgproc.findContours(dest, contours, hierarchy, Imgproc.RETR_EXTERNAL,Imgproc.CHAIN_APPROX_SIMPLE);
            /*Convert picture back to colors in order to see the red border surrounding the melanoma*/
            Imgproc.cvtColor(dest,dest,Imgproc.COLOR_GRAY2RGB);
            /*Painting red border around the melanoma based on the contour vector*/
            Imgproc.drawContours(dest,contours,-1,new Scalar(255,0,0),10);
            /*Filling the inside of the contours in white color in order to get rid of "noises" */
            Imgproc.drawContours(dest,contours,-1,new Scalar(255,255,255),-1);
            /*Convert our image(as Mat object) back to bitmap in order to display in on the screen*/
            Bitmap bm = Bitmap.createBitmap(dest.cols(), dest.rows(),Bitmap.Config.ARGB_8888);
            Utils.matToBitmap(dest, bm);

            image.setImageBitmap(bm);

        }


